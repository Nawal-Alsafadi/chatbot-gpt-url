{"docstore/metadata": {"7dfe73c9-f272-4e32-b956-95a7066bbed1": {"doc_hash": "0a4b6d787e2b1407621a9cb0ea448863a60d2950c3911527d64245e17f471fde"}, "15acc11a-395d-4f99-99d5-0b60ae455c08": {"doc_hash": "fc0140b582f09f250d7d46bd655a77eefe0228e9fb2720b0700d4609f6a3d62d"}, "00e619f6-10bc-4cac-8f1b-c0844c65ce91": {"doc_hash": "81a1b032dff74b1f6dd576a27d4163da5524c9dba7752f78340a5161bda79a3b"}, "9d7afef3-f941-4d43-8980-dc60f489a3c2": {"doc_hash": "e20600e70513ed1346e96bac385f1e622b479e18cdb3ae88e0be26065a495fe7"}, "ed934147-64f1-40aa-84e0-70684fcda7d1": {"doc_hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654"}, "d9989912-d92a-485a-8958-401ec332effc": {"doc_hash": "dd714d0440e3f4a42d60175b8cc0c5779f20997eb01ec88645055f28f95c7662", "ref_doc_id": "7dfe73c9-f272-4e32-b956-95a7066bbed1"}, "a1a47449-bcd1-497b-8001-3a5ff89bab0f": {"doc_hash": "c147259289496487ce055b1074e6fa1698998f4b7c2814d9ee484f67d42e3ca4", "ref_doc_id": "15acc11a-395d-4f99-99d5-0b60ae455c08"}, "70ccfc77-a70e-436f-a9de-d6d8464a6f20": {"doc_hash": "616dfe9241610edb098d1e9ef48c4dd355c73838acee7654ef2f90ab9a13136e", "ref_doc_id": "00e619f6-10bc-4cac-8f1b-c0844c65ce91"}, "d0cbe4aa-0ce9-4bf1-9efd-7e0094522000": {"doc_hash": "ad23a6330229c19048aaab7dc78c2e31c7e1449a72ae746e93b8dc8bcc741f46", "ref_doc_id": "9d7afef3-f941-4d43-8980-dc60f489a3c2"}, "8c8d7310-ecdc-47fe-a594-05d748ec5a28": {"doc_hash": "85a41098445068fb870ac22b3e9b0ebd942f2ba31632175a62714f1482aaab27", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "6218af31-4283-49a9-8d6b-36419f2602c9": {"doc_hash": "9886bd0e118e813b83f22133dce03da70be5b957953c406643526e76ecc42331", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "74b1c2cd-77ad-4df7-88c7-e1846f1ce2b2": {"doc_hash": "1e8085aa5fb6653a1a530e180078ee1576d8f103ca87642caca396877edfa2e0", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "40e4dd5a-9c08-4ac8-b77a-78ea4f0ede45": {"doc_hash": "bc76082d296dff12634b322f49f2b89129d2548ffe5ad8564397cd88687a7e6a", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "73fba0c0-18d0-4642-abf0-8e748f118932": {"doc_hash": "c7c0e7a8e123ac1f10750615c6a53384a614e46683b315fb39c51e90e7989c8d", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "d1ea78dd-a5fb-4da6-b2da-59d8c0e83beb": {"doc_hash": "22090a0aec7f1db8a9f53f2126b246a33b3e7a16f9e62e4d4435879ec565be13", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "40ff5a2b-dcab-425b-9eb2-2fd1c4820a00": {"doc_hash": "1fe4a0124cb0601125e37cfe2b29591ff684ec2a0e0277eccf2aec246b08ebcd", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "10ce32d7-c04e-4cf1-a172-c7126cd6c2e1": {"doc_hash": "d3a67bbe4ccd39bfee5961df8b37e8a5b76c955f12b60fd9555b534aafafac8b", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "dff06e6d-c79a-43df-bf1c-b6357a36565b": {"doc_hash": "10638a12575d805263672b844ae6844cd0e0e55568b9490e957d3b9e5fd02857", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "0e3976ba-733f-4c14-be6b-2b7a745c2a19": {"doc_hash": "e7feff0f386ed16f335d71dcd618b1f8817e91570cec3ac1c40e53330606e65b", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "15efbffe-6487-405d-b19c-36476b2f47f9": {"doc_hash": "2e74ae181cd50d52fa7732ac5b66e44295025e8b9589b18db1efdb11cf8e03a6", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}, "225e6d66-a44f-44c1-96cf-1bc3b09f8fec": {"doc_hash": "0887bdd7930e87eed38ac747788d85ecd1396293fc13e87d3118cb2bbaf9cee9", "ref_doc_id": "ed934147-64f1-40aa-84e0-70684fcda7d1"}}, "docstore/data": {"d9989912-d92a-485a-8958-401ec332effc": {"__data__": {"id_": "d9989912-d92a-485a-8958-401ec332effc", "embedding": null, "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\essay_q_and_a.json", "file_name": "essay_q_and_a.json", "file_type": "application/json", "file_size": 1532, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7dfe73c9-f272-4e32-b956-95a7066bbed1", "node_type": "4", "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\essay_q_and_a.json", "file_name": "essay_q_and_a.json", "file_type": "application/json", "file_size": 1532, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "hash": "0a4b6d787e2b1407621a9cb0ea448863a60d2950c3911527d64245e17f471fde", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1a47449-bcd1-497b-8001-3a5ff89bab0f", "node_type": "1", "metadata": {}, "hash": "c147259289496487ce055b1074e6fa1698998f4b7c2814d9ee484f67d42e3ca4", "class_name": "RelatedNodeInfo"}}, "hash": "dd714d0440e3f4a42d60175b8cc0c5779f20997eb01ec88645055f28f95c7662", "text": "[\n    {\n      \"question\": \"Who is often regarded as one of the greatest essay writers of all time?\",\n      \"answer\": \"Michel de Montaigne is frequently considered one of the greatest essay writers of all time. His collection of essays, titled 'Essais,' is a pioneering work that explored personal reflections and philosophical ideas in the 16th century.\"\n    },\n    {\n      \"question\": \"Which American essayist is celebrated for his transcendentalist essays, including 'Self-Reliance' and 'Nature'?\",\n      \"answer\": \"Ralph Waldo Emerson is celebrated for his transcendentalist essays, such as 'Self-Reliance' and 'Nature.' His works emphasize individualism, self-reliance, and a deep connection with nature.\"\n    },\n    {\n      \"question\": \"Who wrote the influential essay 'A Modest Proposal,' satirically suggesting the consumption of infants as a solution to poverty in Ireland?\",\n      \"answer\": \"Jonathan Swift is the author of the influential essay 'A Modest Proposal.' Published in 1729, the essay uses satire to criticize British policy in Ireland by proposing a shocking solution to address poverty.\"\n    },\n    {\n      \"question\": \"Which contemporary essayist is known for her explorations of race, feminism, and identity, with notable works like 'Bad Feminist' and 'Hunger'?\",\n      \"answer\": \"Roxane Gay is a prominent contemporary essayist known for her thought-provoking explorations of race, feminism, and identity. 'Bad Feminist' and 'Hunger' are among her critically acclaimed works.\"\n    }\n  ]", "start_char_idx": 0, "end_char_idx": 1511, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a1a47449-bcd1-497b-8001-3a5ff89bab0f": {"__data__": {"id_": "a1a47449-bcd1-497b-8001-3a5ff89bab0f", "embedding": null, "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\good essay.txt", "file_name": "good essay.txt", "file_type": "text/plain", "file_size": 4690, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15acc11a-395d-4f99-99d5-0b60ae455c08", "node_type": "4", "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\good essay.txt", "file_name": "good essay.txt", "file_type": "text/plain", "file_size": 4690, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "hash": "fc0140b582f09f250d7d46bd655a77eefe0228e9fb2720b0700d4609f6a3d62d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9989912-d92a-485a-8958-401ec332effc", "node_type": "1", "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\essay_q_and_a.json", "file_name": "essay_q_and_a.json", "file_type": "application/json", "file_size": 1532, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "hash": "dd714d0440e3f4a42d60175b8cc0c5779f20997eb01ec88645055f28f95c7662", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "70ccfc77-a70e-436f-a9de-d6d8464a6f20", "node_type": "1", "metadata": {}, "hash": "616dfe9241610edb098d1e9ef48c4dd355c73838acee7654ef2f90ab9a13136e", "class_name": "RelatedNodeInfo"}}, "hash": "c147259289496487ce055b1074e6fa1698998f4b7c2814d9ee484f67d42e3ca4", "text": "Determining whether an essay is of high quality involves a nuanced evaluation of various elements, ranging from structure and content to style and coherence. This extensive guide provides a comprehensive overview of key indicators that can help you ascertain the quality of an essay.\n\n**1. Clarity of Purpose and Thesis:\nA good essay begins with a clear and well-defined purpose, often encapsulated in a strong thesis statement. Assess whether the essay's central argument is evident from the introduction, guiding the reader on what to expect.\n\nIndicators of Clarity:\n\nThe thesis statement is concise and specific.\nThe purpose of the essay is evident in the introduction.\n**2. Logical Organization and Structure:\nAn effective essay is organized logically, with a clear progression of ideas. Evaluate how well the essay flows from one point to another, ensuring that paragraphs and sections are interconnected in a cohesive manner.\n\nIndicators of Logical Organization:\n\nThe essay follows a clear introduction, body, and conclusion structure.\nTransitions between paragraphs and sections are smooth and logical.\n**3. Supporting Evidence and Examples:\nA high-quality essay substantiates its arguments with relevant and compelling evidence. Scrutinize the essay for the presence of well-researched facts, examples, and quotes that bolster the author's claims.\n\nIndicators of Strong Evidence:\n\nClear integration of evidence to support key points.\nCitation of credible sources where applicable.\n**4. Critical Thinking and Analysis:\nAn excellent essay showcases critical thinking skills by analyzing and synthesizing information. Evaluate whether the author engages deeply with the topic, providing insightful analysis rather than mere description.\n\nIndicators of Critical Thinking:\n\nThe essay explores nuances and complexities of the topic.\nThe author provides original insights and perspectives.\n**5. Coherence and Consistency:\nCoherence ensures that the essay is internally consistent and that ideas are connected logically. Assess whether the essay maintains a consistent tone, style, and focus throughout.\n\nIndicators of Coherence:\n\nConsistent use of language and tone.\nEach paragraph contributes to the overall argument without introducing confusion.\n**6. Engaging Introduction and Conclusion:\nA captivating introduction sets the stage for a compelling essay, while a well-crafted conclusion leaves a lasting impression. Determine whether the essay's introduction grabs the reader's attention and if the conclusion provides a satisfying resolution.\n\nIndicators of Engaging Introductions and Conclusions:\n\nThe introduction includes a hook or intriguing statement.\nThe conclusion summarizes key points and leaves a lasting impression.\n**7. Grammar and Language Use:\nA good essay demonstrates mastery of grammar, syntax, and language use. Evaluate whether the writing is clear, concise, and free from grammatical errors.\n\nIndicators of Strong Language Use:\n\nProper grammar, punctuation, and spelling.\nVaried and precise vocabulary enhances the quality of expression.\n**8. Audience Awareness:\nConsider whether the essay is tailored to its intended audience. A high-quality essay takes into account the knowledge level, interests, and expectations of the target readers.\n\nIndicators of Audience Awareness:\n\nThe tone and style align with the intended audience.\nThe author anticipates and addresses potential questions or concerns.\n**9. Revision and Editing:\nA good essay undergoes thorough revision and editing. Assess whether the author has refined the content, clarified ideas, and eliminated unnecessary elements.\n\nIndicators of Effective Revision:\n\nEvidence of multiple drafts or revisions.\nAttention to detail in terms of content and style.\n**10. Originality and Creativity:\nExceptional essays often exhibit a degree of originality and creative thinking. Determine whether the author brings a unique perspective or innovative approach to the topic.\n\nIndicators of Originality:\n\nUnique insights or interpretations.\nCreative use of language or structure.\nConclusion:\nIn conclusion, evaluating the quality of an essay involves a multifaceted analysis of its various components. A good essay combines clarity of purpose, logical organization, strong evidence, critical thinking, coherence, engaging writing, grammatical proficiency, audience awareness, meticulous revision, and an element of originality. By scrutinizing these aspects, you can discern whether an essay successfully communicates its intended message and resonates with its readers, marking it as a well-crafted and high-quality piece of writing.", "start_char_idx": 0, "end_char_idx": 4605, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "70ccfc77-a70e-436f-a9de-d6d8464a6f20": {"__data__": {"id_": "70ccfc77-a70e-436f-a9de-d6d8464a6f20", "embedding": null, "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\how to write an essay.txt", "file_name": "how to write an essay.txt", "file_type": "text/plain", "file_size": 4671, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "00e619f6-10bc-4cac-8f1b-c0844c65ce91", "node_type": "4", "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\how to write an essay.txt", "file_name": "how to write an essay.txt", "file_type": "text/plain", "file_size": 4671, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "hash": "81a1b032dff74b1f6dd576a27d4163da5524c9dba7752f78340a5161bda79a3b", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a1a47449-bcd1-497b-8001-3a5ff89bab0f", "node_type": "1", "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\good essay.txt", "file_name": "good essay.txt", "file_type": "text/plain", "file_size": 4690, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "hash": "c147259289496487ce055b1074e6fa1698998f4b7c2814d9ee484f67d42e3ca4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0cbe4aa-0ce9-4bf1-9efd-7e0094522000", "node_type": "1", "metadata": {}, "hash": "ad23a6330229c19048aaab7dc78c2e31c7e1449a72ae746e93b8dc8bcc741f46", "class_name": "RelatedNodeInfo"}}, "hash": "616dfe9241610edb098d1e9ef48c4dd355c73838acee7654ef2f90ab9a13136e", "text": "Writing an essay is a multifaceted and nuanced process that requires careful consideration of various elements to craft a coherent and compelling piece of work. To embark on the journey of composing an essay, whether it be for academic, professional, or personal purposes, one must follow a systematic approach that encompasses pre-writing, drafting, revising, and editing phases. This comprehensive guide aims to provide an extensive overview of the essay-writing process, offering insights into each stage to facilitate a thorough understanding.\n\n1. Pre-writing:\nBefore putting pen to paper or fingers to keyboard, it is essential to engage in pre-writing activities to generate ideas, gather information, and outline the essay's structure.\n\na. Understanding the Prompt:\n\nBegin by carefully analyzing the essay prompt or question. Identify key components, requirements, and any specific guidelines provided.\nb. Research:\n\nConduct thorough research on the topic. Utilize academic journals, books, reputable websites, and other sources to gather information and evidence to support your thesis.\nc. Brainstorming:\n\nEngage in brainstorming sessions to generate ideas. Consider different perspectives, arguments, and potential themes for your essay.\nd. Thesis Statement:\n\nFormulate a clear and concise thesis statement that encapsulates the main argument or purpose of your essay. This statement will guide your writing and provide a focal point.\ne. Outline:\n\nDevelop a comprehensive outline that organizes your ideas logically. Outline the introduction, body paragraphs, and conclusion, including key points and supporting evidence.\n2. Drafting:\nWith a solid foundation laid during pre-writing, it's time to start drafting your essay.\n\na. Introduction:\n\nCraft a compelling introduction that grabs the reader's attention. Include background information, the thesis statement, and a brief overview of what the essay will explore.\nb. Body Paragraphs:\n\nEach body paragraph should focus on a single point that supports the thesis. Present evidence, examples, and analysis to strengthen your arguments. Ensure a logical flow between paragraphs.\nc. Transitions:\n\nUse transitional phrases and sentences to guide the reader through the essay smoothly. Transitions enhance the coherence and readability of your work.\nd. Counterarguments:\n\nAnticipate potential counterarguments and address them within the essay. This demonstrates a thorough understanding of the topic and strengthens your position.\ne. Conclusion:\n\nSummarize key points, restate the thesis in a nuanced way, and provide a sense of closure. Avoid introducing new information in the conclusion.\n3. Revising:\nRevision is a critical phase that involves refining and improving the content and structure of your essay.\n\na. Review Content:\n\nEvaluate the clarity and relevance of each paragraph. Ensure that arguments are well-supported with evidence and that each paragraph contributes to the overall thesis.\nb. Structure:\n\nAssess the overall structure of the essay. Verify that there is a logical progression from the introduction to the conclusion. Consider the effectiveness of your outline.\nc. Clarity and Coherence:\n\nCheck for clarity in expression. Ensure that your ideas are presented coherently and that the reader can follow your line of reasoning.\nd. Peer Review:\n\nSeek feedback from peers or colleagues. External perspectives can provide valuable insights into areas that may need improvement.\n4. Editing:\nThe editing phase focuses on refining language, grammar, and style to enhance the overall quality of your essay.\n\na. Proofreading:\n\nCarefully proofread your essay to correct errors in grammar, punctuation, and spelling. Attention to detail is crucial in this phase.\nb. Style and Tone:\n\nEnsure consistency in writing style and tone. Adjust the tone to match the intended audience and purpose of the essay.\nc. Conciseness:\n\nEliminate unnecessary words and phrases to improve the clarity and conciseness of your writing. Ensure that every word serves a purpose.\nd. Citation and Referencing:\n\nVerify that all sources are properly cited and referenced according to the required citation style (e.g., APA, MLA, Chicago).\nConclusion:\nIn conclusion, the essay-writing process is a structured and iterative journey that involves careful planning, thoughtful drafting, meticulous revision, and detailed editing. By following this comprehensive guide, writers can navigate the complexities of essay composition and produce a polished and impactful piece of writing. Remember, practice and persistence are key to mastering the art of essay writing.", "start_char_idx": 1, "end_char_idx": 4601, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0cbe4aa-0ce9-4bf1-9efd-7e0094522000": {"__data__": {"id_": "d0cbe4aa-0ce9-4bf1-9efd-7e0094522000", "embedding": null, "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\types of essays.txt", "file_name": "types of essays.txt", "file_type": "text/plain", "file_size": 5233, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d7afef3-f941-4d43-8980-dc60f489a3c2", "node_type": "4", "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\types of essays.txt", "file_name": "types of essays.txt", "file_type": "text/plain", "file_size": 5233, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "hash": "e20600e70513ed1346e96bac385f1e622b479e18cdb3ae88e0be26065a495fe7", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "70ccfc77-a70e-436f-a9de-d6d8464a6f20", "node_type": "1", "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\how to write an essay.txt", "file_name": "how to write an essay.txt", "file_type": "text/plain", "file_size": 4671, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "hash": "616dfe9241610edb098d1e9ef48c4dd355c73838acee7654ef2f90ab9a13136e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c8d7310-ecdc-47fe-a594-05d748ec5a28", "node_type": "1", "metadata": {}, "hash": "85a41098445068fb870ac22b3e9b0ebd942f2ba31632175a62714f1482aaab27", "class_name": "RelatedNodeInfo"}}, "hash": "ad23a6330229c19048aaab7dc78c2e31c7e1449a72ae746e93b8dc8bcc741f46", "text": "1. Descriptive Essays:\nDescriptive essays aim to paint a vivid picture for the reader. The writer employs sensory details and evocative language to convey a sensory experience, emotion, or scene. The goal is to immerse the reader in the subject, enabling them to visualize and feel what the writer describes.\n\nKey Features:\n\nRich sensory details.\nUse of figurative language.\nFocus on creating a sensory experience.\nWriting Strategy:\n\nBegin with a strong introduction that sets the scene.\nOrganize details logically, moving from one sensory impression to another.\nConclude by summarizing the overall impression.\n**2. Narrative Essays:\nNarrative essays recount personal experiences or tell a story. The writer engages the reader by unfolding events, characters, and a plot. These essays often incorporate dialogue and create a compelling narrative arc.\n\nKey Features:\n\nFirst-person perspective.\nChronological storytelling.\nInclusion of vivid details and dialogue.\nWriting Strategy:\n\nDevelop a captivating introduction that establishes the setting and characters.\nMaintain a clear chronological order to keep the narrative coherent.\nConclude with a reflection or lesson learned.\n**3. Expository Essays:\nExpository essays aim to inform, explain, or describe a topic in a straightforward manner. The writer presents a balanced analysis of a subject, providing facts, statistics, and evidence without expressing personal opinions.\n\nKey Features:\n\nClear and concise language.\nObjective presentation of facts.\nLogical organization of information.\nWriting Strategy:\n\nStart with a clear thesis statement.\nPresent information in a logical order, using paragraphs for each main point.\nConclude by summarizing key points and reiterating the thesis.\n**4. Persuasive Essays:\nPersuasive essays seek to convince the reader of a particular viewpoint or argument. The writer presents a compelling case, using evidence, logic, and persuasive language to sway the reader's opinion.\n\nKey Features:\n\nStrong thesis statement expressing a clear stance.\nUse of persuasive techniques (ethos, logos, pathos).\nAddressing counterarguments.\nWriting Strategy:\n\nCraft a powerful introduction with a strong thesis statement.\nPresent evidence and arguments logically.\nAddress counterarguments and provide a compelling conclusion.\n**5. Argumentative Essays:\nSimilar to persuasive essays, argumentative essays articulate a specific position but place a greater emphasis on providing evidence and logical reasoning. These essays encourage critical thinking and analysis.\n\nKey Features:\n\nClearly defined thesis statement.\nLogical presentation of evidence.\nEngagement with opposing viewpoints.\nWriting Strategy:\n\nClearly state the thesis in the introduction.\nSupport the thesis with well-researched evidence.\nAddress opposing views and strengthen your argument in the conclusion.\n**6. Compare and Contrast Essays:\nCompare and contrast essays analyze the similarities and differences between two or more subjects. The writer explores how the subjects are alike and different, drawing conclusions based on the comparison.\n\nKey Features:\n\nClear identification of subjects for comparison.\nDetailed examination of similarities and differences.\nA focused thesis statement highlighting the main points of comparison.\nWriting Strategy:\n\nIntroduce the subjects and establish the purpose of the comparison.\nDevote separate paragraphs to discussing each aspect of the comparison.\nConclude by summarizing key similarities and differences.\n**7. Analytical Essays:\nAnalytical essays delve into the analysis of a specific topic or issue. The writer breaks down the subject into its constituent parts, examines them closely, and draws meaningful conclusions.\n\nKey Features:\n\nIn-depth analysis of a specific topic.\nUse of evidence to support analysis.\nClear and logical organization of ideas.\nWriting Strategy:\n\nBegin with a strong thesis statement that outlines the focus of analysis.\nAnalyze each component separately, providing evidence and examples.\nConclude by summarizing key insights gained through analysis.\n**8. Research Essays:\nResearch essays require in-depth investigation and exploration of a topic. The writer gathers information from various sources, critically evaluates the material, and presents an informed argument.\n\nKey Features:\n\nExtensive use of research sources.\nProper citation of references.\nA clear synthesis of information.\nWriting Strategy:\n\nDevelop a well-defined research question or thesis.\nConduct thorough research, utilizing reputable sources.\nPresent findings coherently, supporting arguments with evidence.\nConclusion:\nIn conclusion, essays encompass a diverse array of forms, each tailored to fulfill specific objectives. Mastering the art of essay writing involves understanding the nuances of these types and employing the appropriate strategies to effectively communicate ideas, opinions, or information to the reader. Whether crafting a descriptive scene, telling a compelling story, presenting a persuasive argument, or conducting thorough research, the key lies in adapting your approach to the unique demands of each essay type.", "start_char_idx": 0, "end_char_idx": 5116, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c8d7310-ecdc-47fe-a594-05d748ec5a28": {"__data__": {"id_": "8c8d7310-ecdc-47fe-a594-05d748ec5a28", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0cbe4aa-0ce9-4bf1-9efd-7e0094522000", "node_type": "1", "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\types of essays.txt", "file_name": "types of essays.txt", "file_type": "text/plain", "file_size": 5233, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}, "hash": "ad23a6330229c19048aaab7dc78c2e31c7e1449a72ae746e93b8dc8bcc741f46", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6218af31-4283-49a9-8d6b-36419f2602c9", "node_type": "1", "metadata": {}, "hash": "9886bd0e118e813b83f22133dce03da70be5b957953c406643526e76ecc42331", "class_name": "RelatedNodeInfo"}}, "hash": "85a41098445068fb870ac22b3e9b0ebd942f2ba31632175a62714f1482aaab27", "text": "LlamaIndex \ud83e\udd99 0.9.26\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContents\n\n\n\n\n\nMenu\n\n\n\n\n\n\n\nExpand\n\n\n\n\n\nLight mode\n\n\n\n\n\n\n\n\n\n\n\n\n\nDark mode\n\n\n\n\n\n\nAuto light/dark mode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHide navigation sidebar\n\n\nHide table of contents sidebar\n\n\n\n\n\nToggle site navigation sidebar\n\n\n\n\nLlamaIndex \ud83e\udd99 0.9.26\n\n\n\n\n\nToggle Light / Dark / Auto color theme\n\n\n\n\n\n\nToggle table of contents sidebar\n\n\n\n\n\n\n\nLlamaIndex \ud83e\udd99 0.9.26\n\n\n\n\n\n\n\nGetting Started\n\nInstallation and Setup\nHow to read these docs\nStarter Tutorial\nHigh-Level Concepts\nCustomization Tutorial\nDiscover LlamaIndex Video Series\n\nUse Cases\n\nQ&A\nChatbots\nAgentsToggle child pages in navigation\nAgents (Putting your RAG Pipeline Together)Toggle child pages in navigation\nBuild your own OpenAI Agent\nOpenAI Agent with Query Engine Tools\nOpenAI Agent Query Planning\nOpenAI Assistant Agent\nOpenAI Assistant Advanced Retrieval Cookbook\nOpenAI agent: specifying a forced function call\nSingle-Turn Multi-Function Calling OpenAI Agents\nContext-Augmented OpenAI Agent\n\n\nAgentic Strategies (Optimizing your RAG Pipeline)Toggle child pages in navigation\nRoutersToggle child pages in navigation\nRouter Query Engine\nRetriever Router Query Engine\nSQL Router Query Engine\nRouter Retriever\n\n\nQuery TransformationsToggle child pages in navigation\nHyDE Query Transform\nMulti-Step Query Engine\n\n\nSub Question Query Engine (Intro)\nBuild your own OpenAI Agent\nOpenAI Agent with Query Engine Tools\nRetrieval-Augmented OpenAI Agent\nOpenAI Agent + Query Engine Experimental Cookbook\nOpenAI Agent Query Planning\nContext-Augmented OpenAI Agent\n\n\nData AgentsToggle child pages in navigation\nUsage Pattern\nModule GuidesToggle child pages in navigation\nBuild your own OpenAI Agent\nOpenAI Agent with Query Engine Tools\nRetrieval-Augmented OpenAI Agent\nOpenAI Agent + Query Engine Experimental Cookbook\nOpenAI Agent Query Planning\nContext-Augmented OpenAI Agent\nRecursive Retriever + Document Agents\nMulti-Document Agents\nGPT Builder Demo\nSingle-Turn Multi-Function Calling OpenAI Agents\nOpenAI Assistant Agent\nBenchmarking OpenAI Retrieval API (through Assistant Agent)\nOpenAI Assistant Advanced Retrieval Cookbook\nReAct Agent with Query Engine Tools\nLLMCompiler Agent Cookbook\nBuilding a Custom Agent\nStep-wise, Controllable Agents\nControllable Agents for RAG\nControllable Agents for RAG\n\n\nToolsToggle child pages in navigation\nUsage Pattern\nLlamaHub Tools Guide\n\n\nLower-Level Agent API\n\n\nToolsToggle child pages in navigation\nUsage Pattern\nLlamaHub Tools Guide\n\n\n\n\nStructured Data ExtractionToggle child pages in navigation\nStructured OutputsToggle child pages in navigation\nPydantic ProgramToggle child pages in navigation\nLLM Pydantic Program\nOpenAI Pydantic Program\nGuidance Pydantic Program\nGuidance for Sub-Question Query Engine\nDataFrame Structured Data Extraction\nEvaporate Demo\n\n\nQuery Engines + Pydantic OutputsToggle child pages in navigation\nQuery Engine with Pydantic Outputs\nPydantic Tree Summarize\nDownload Data\n\n\nOutput Parsing ModulesToggle child pages in navigation\nGuardrails Output Parsing\nLangchain Output Parsing\nGuidance Pydantic Program\nGuidance for Sub-Question Query Engine\nOpenAI Pydantic Program\n\n\n\n\nOutput Parsing ModulesToggle child pages in navigation\nGuardrails Output Parsing\nLangchain Output Parsing\nGuidance Pydantic Program\nGuidance for Sub-Question Query Engine\nOpenAI Pydantic Program\n\n\nExtracting names and locations from descriptions of people\nExtracting album data from music reviews\n\n\nMulti-modalToggle child pages in navigation\nAdvanced Multi-Modal Retrieval using GPT4V and Multi-Modal Index/Retriever\nMulti-modal retrieval with CLIP\nImage to Image Retrieval\nSemi-structured Image Retrieval\nChroma Multi-Modal Demo with LlamaIndex\nMulti-Modal on PDF\u2019s with tables.\nMulti-Modal GPT4V Pydantic Program\nRetrieval-Augmented Image Captioning\n[Beta] Multi-modal ReAct Agent\nGPT4-V Experiments with General, Specific questions and Chain Of Thought (COT) Prompting Technique.\nMulti-Modal LLM using Replicate LlaVa, Fuyu 8B, MiniGPT4 models for image reasoning\nGPT4-V:\nEvaluating Multi-Modal RAG\n\n\n\nUnderstanding\n\nBuilding an LLM application\nUsing LLMsToggle child pages in navigation\nPrivacy and Security", "start_char_idx": 9, "end_char_idx": 4127, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6218af31-4283-49a9-8d6b-36419f2602c9": {"__data__": {"id_": "6218af31-4283-49a9-8d6b-36419f2602c9", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c8d7310-ecdc-47fe-a594-05d748ec5a28", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "85a41098445068fb870ac22b3e9b0ebd942f2ba31632175a62714f1482aaab27", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74b1c2cd-77ad-4df7-88c7-e1846f1ce2b2", "node_type": "1", "metadata": {}, "hash": "1e8085aa5fb6653a1a530e180078ee1576d8f103ca87642caca396877edfa2e0", "class_name": "RelatedNodeInfo"}}, "hash": "9886bd0e118e813b83f22133dce03da70be5b957953c406643526e76ecc42331", "text": "Multi-modalToggle child pages in navigation\nAdvanced Multi-Modal Retrieval using GPT4V and Multi-Modal Index/Retriever\nMulti-modal retrieval with CLIP\nImage to Image Retrieval\nSemi-structured Image Retrieval\nChroma Multi-Modal Demo with LlamaIndex\nMulti-Modal on PDF\u2019s with tables.\nMulti-Modal GPT4V Pydantic Program\nRetrieval-Augmented Image Captioning\n[Beta] Multi-modal ReAct Agent\nGPT4-V Experiments with General, Specific questions and Chain Of Thought (COT) Prompting Technique.\nMulti-Modal LLM using Replicate LlaVa, Fuyu 8B, MiniGPT4 models for image reasoning\nGPT4-V:\nEvaluating Multi-Modal RAG\n\n\n\nUnderstanding\n\nBuilding an LLM application\nUsing LLMsToggle child pages in navigation\nPrivacy and Security\n\n\nLoading Data (Ingestion)Toggle child pages in navigation\nLlamaHub\nDocuments / NodesToggle child pages in navigation\nDefining and Customizing DocumentsToggle child pages in navigation\nMetadata Extraction Usage PatternToggle child pages in navigation\nExtracting Metadata for Better Document Indexing and Understanding\nAutomated Metadata Extraction for Better Retrieval + Synthesis\nEntity Metadata Extraction\nMetadata Extraction and Augmentation w/ Marvin\nPydantic Extractor\n\n\n\n\nDefining and Customizing Nodes\n\n\nNode Parser Usage PatternToggle child pages in navigation\nNode Parser Modules\n\n\nIngestion PipelineToggle child pages in navigation\nTransformations\nAdvanced Ingestion Pipeline\nAsync Ingestion Pipeline + Metadata Extraction\nIngestion Pipeline + Document Management\nRedis Ingestion Pipeline\nBuilding a Live RAG Pipeline over Google Drive Files\n\n\n\n\nIndexing\nStoring\nQuerying\nPutting It All TogetherToggle child pages in navigation\nQ&A patternsToggle child pages in navigation\nA Guide to Extracting Terms and Definitions\nA Guide to Creating a Unified Query Framework over your Indexes\nKnowledge Graphs\nStructured Data\nA Guide to LlamaIndex + Structured Data\nAirbyte SQL Index Guide\n\n\nFull-Stack Web ApplicationToggle child pages in navigation\nA Guide to Building a Full-Stack Web App with LLamaIndex\nA Guide to Building a Full-Stack LlamaIndex Web App with Delphic\n\n\nHow to Build a Chatbot\nAgentsToggle child pages in navigation\nBuild your own OpenAI Agent\nOpenAI Agent with Query Engine Tools\nOpenAI Agent Query Planning\nOpenAI Assistant Agent\nOpenAI Assistant Advanced Retrieval Cookbook\nOpenAI agent: specifying a forced function call\nSingle-Turn Multi-Function Calling OpenAI Agents\nContext-Augmented OpenAI Agent\n\n\nFull-Stack ProjectsToggle child pages in navigation\ncreate-llama Blog\ncreate-llama Repo\ncreate-llama Additional Templates\nSEC Insights App\nSEC Insights Repo\nChat LlamaIndex App\nChat LlamaIndex Repo\nRAGs Repo\n\n\n\n\nTracing and Debugging\nEvaluatingToggle child pages in navigation\nCost AnalysisToggle child pages in navigation\nUsage Pattern\n\n\n\n\n\nOptimizing\n\nBasic StrategiesToggle child pages in navigation\nAccessing/Customizing Prompts within Higher-Level Modules\nAdvanced Prompt Techniques (Variable Mappings, Functions)\nAdvanced Prompt Techniques (Variable Mappings, Functions)\nPrompt Engineering for RAG\nBM25 Retriever\nReciprocal Rerank Fusion Retriever\nWeaviate Vector Store - Hybrid Search\nPinecone Vector Store - Hybrid Search\nVector Store Index usage examples\nDefining and Customizing DocumentsToggle child pages in navigation\nMetadata Extraction Usage PatternToggle child pages in navigation\nExtracting Metadata for Better Document Indexing and Understanding\nAutomated Metadata Extraction for Better Retrieval + Synthesis\nEntity Metadata Extraction\nMetadata Extraction and Augmentation w/ Marvin\nPydantic Extractor\n\n\n\n\nDefining and Customizing Nodes\nMetadata Extraction Usage PatternToggle child pages in navigation\nExtracting Metadata for Better Document Indexing and Understanding\nAutomated Metadata Extraction for Better Retrieval + Synthesis\nEntity Metadata Extraction\nMetadata Extraction and Augmentation w/ Marvin\nPydantic Extractor\n\n\n\n\nAdvanced Retrieval StrategiesToggle child pages in navigation\nQuery Transform Cookbook\nQuery TransformationsToggle child pages in navigation\nHyDE Query Transform\nMulti-Step Query Engine\n\n\nDeepMemory (Activeloop)\nWeaviate Vector Store - Hybrid Search\nPinecone Vector Store - Hybrid Search\n\n\nAgentic strategiesToggle child pages in navigation\nRoutersToggle child pages in navigation\nRouter Query Engine\nRetriever Router Query Engine\nSQL Router Query Engine\nRouter Retriever\n\n\nQuery TransformationsToggle child pages in navigation\nHyDE Query Transform\nMulti-Step Query Engine", "start_char_idx": 3414, "end_char_idx": 7874, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74b1c2cd-77ad-4df7-88c7-e1846f1ce2b2": {"__data__": {"id_": "74b1c2cd-77ad-4df7-88c7-e1846f1ce2b2", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6218af31-4283-49a9-8d6b-36419f2602c9", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "9886bd0e118e813b83f22133dce03da70be5b957953c406643526e76ecc42331", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40e4dd5a-9c08-4ac8-b77a-78ea4f0ede45", "node_type": "1", "metadata": {}, "hash": "bc76082d296dff12634b322f49f2b89129d2548ffe5ad8564397cd88687a7e6a", "class_name": "RelatedNodeInfo"}}, "hash": "1e8085aa5fb6653a1a530e180078ee1576d8f103ca87642caca396877edfa2e0", "text": "Defining and Customizing Nodes\nMetadata Extraction Usage PatternToggle child pages in navigation\nExtracting Metadata for Better Document Indexing and Understanding\nAutomated Metadata Extraction for Better Retrieval + Synthesis\nEntity Metadata Extraction\nMetadata Extraction and Augmentation w/ Marvin\nPydantic Extractor\n\n\n\n\nAdvanced Retrieval StrategiesToggle child pages in navigation\nQuery Transform Cookbook\nQuery TransformationsToggle child pages in navigation\nHyDE Query Transform\nMulti-Step Query Engine\n\n\nDeepMemory (Activeloop)\nWeaviate Vector Store - Hybrid Search\nPinecone Vector Store - Hybrid Search\n\n\nAgentic strategiesToggle child pages in navigation\nRoutersToggle child pages in navigation\nRouter Query Engine\nRetriever Router Query Engine\nSQL Router Query Engine\nRouter Retriever\n\n\nQuery TransformationsToggle child pages in navigation\nHyDE Query Transform\nMulti-Step Query Engine\n\n\nSub Question Query Engine (Intro)\nBuild your own OpenAI Agent\nOpenAI Agent with Query Engine Tools\nRetrieval-Augmented OpenAI Agent\nOpenAI Agent + Query Engine Experimental Cookbook\nOpenAI Agent Query Planning\nContext-Augmented OpenAI Agent\n\n\nEvaluationToggle child pages in navigation\nEnd-to-End EvaluationToggle child pages in navigation\nQuestionGeneration\nBatchEvalRunner - Running Multiple Evaluations\nCorrectness Evaluator\nFaithfulness Evaluator\nGuideline Evaluator\nPairwise Evaluator\nRelevancy Evaluator\nEmbedding Similarity Evaluator\n\n\nComponent Wise EvaluationToggle child pages in navigation\nBEIR Out of Domain Benchmark\nHotpotQADistractor Demo\n\n\nEvaluatingToggle child pages in navigation\nUsage Pattern (Response Evaluation)\nUsage Pattern (Retrieval)\nModulesToggle child pages in navigation\nFaithfulness Evaluator\nRelevancy Evaluator\nAnswer Relevancy and Context Relevancy Evaluations\nGuideline Evaluator\nCorrectness Evaluator\nEmbedding Similarity Evaluator\nLlamaIndex + DeepEval Integration\nQuestionGeneration\nBatchEvalRunner - Running Multiple Evaluations\nEvaluating Multi-Modal RAG\nRetrieval Evaluation\n\n\nEvaluating With LabelledRagDataset\u2019sToggle child pages in navigation\nBenchmarking RAG Pipelines With A LabelledRagDatatset\nDownloading a LlamaDataset from LlamaHub\n\n\nContributing A LabelledRagDatasetToggle child pages in navigation\nLlamaDataset Submission Template Notebook\n\n\n\n\nComponent Wise EvaluationToggle child pages in navigation\nBEIR Out of Domain Benchmark\nHotpotQADistractor Demo\n\n\nEnd-to-End EvaluationToggle child pages in navigation\nQuestionGeneration\nBatchEvalRunner - Running Multiple Evaluations\nCorrectness Evaluator\nFaithfulness Evaluator\nGuideline Evaluator\nPairwise Evaluator\nRelevancy Evaluator\nEmbedding Similarity Evaluator\n\n\n\n\nFine-tuningToggle child pages in navigation\nFine-tuning an Adapter\nEmbedding Fine-tuning Guide\nRouter Fine-tuning\nEmbedding Fine-tuning Repo\nEmbedding Fine-tuning Blog\nGPT-3.5 Fine-tuning Notebook (Colab)\nGPT-3.5 Fine-tuning Notebook (Notebook link)\nFine-tuning a gpt-3.5 ReAct Agent on Better Chain of Thought\n[WIP] Function Calling Fine-tuning\nGPT-3.5 Fine-tuning Notebook (Colab)\nGPT-3.5 Fine-tuning Notebook (in Repo)\nFine-tuning with Retrieval Augmentation\nOpenAI Function Calling Fine-tuning\nLlama2 Structured Output Fine-tuning\nFine-tuning to Memorize Knowledge\nLlama 2 Text-to-SQL Fine-tuning (w/ Gradient.AI)\nLlama 2 Text-to-SQL Fine-tuning (w/ Modal, Repo)\nLlama 2 Text-to-SQL Fine-tuning (w/ Modal, Notebook)\nKnowledge Distillation For Fine-Tuning A GPT-3.5 Judge (Correctness)\nKnowledge Distillation For Fine-Tuning A GPT-3.5 Judge (Pairwise)\nCross-Encoder Finetuning\nFinetuning Llama 2 for Text-to-SQL\nFinetuning GPT-3.5 to Distill GPT-4\nCohere Custom Reranker", "start_char_idx": 6978, "end_char_idx": 10618, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40e4dd5a-9c08-4ac8-b77a-78ea4f0ede45": {"__data__": {"id_": "40e4dd5a-9c08-4ac8-b77a-78ea4f0ede45", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74b1c2cd-77ad-4df7-88c7-e1846f1ce2b2", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "1e8085aa5fb6653a1a530e180078ee1576d8f103ca87642caca396877edfa2e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "73fba0c0-18d0-4642-abf0-8e748f118932", "node_type": "1", "metadata": {}, "hash": "c7c0e7a8e123ac1f10750615c6a53384a614e46683b315fb39c51e90e7989c8d", "class_name": "RelatedNodeInfo"}}, "hash": "bc76082d296dff12634b322f49f2b89129d2548ffe5ad8564397cd88687a7e6a", "text": "Building Performant RAG Applications for ProductionToggle child pages in navigation\nRecursive Retriever + Query Engine Demo\nDocument Summary Index\nMetadata Replacement + Node Sentence Window\nAuto-Retrieval from a Vector Database\nDocument Summary Index\nRecursive Retriever + Document Agents\nComparing Methods for Structured Retrieval (Auto-Retrieval vs. Recursive Retrieval)\nSub Question Query Engine\nJoint QA Summary Query Engine\nRecursive Retriever + Document Agents\nRouter Query Engine\nOpenAI Agent + Query Engine Experimental Cookbook\nOpenAI Agent Query Planning\nEmbedding Fine-tuning Guide\n\n\nBuilding RAG from Scratch (Lower-Level)Toggle child pages in navigation\nBuilding Data Ingestion from Scratch\nPinecone\nOpenAI\nBuilding Retrieval from Scratch\nBuilding RAG from Scratch (Open-source only!)\nBuilding a (Very Simple) Vector Store from Scratch\nBuilding Response Synthesis from Scratch\nBuilding Evaluation from Scratch\nBuilding Hybrid Search from Scratch\nBuilding a Router from Scratch\nBuilding an Advanced Fusion Retriever from Scratch\n\n\n\nModule Guides\n\nModelsToggle child pages in navigation\nUsing LLMsToggle child pages in navigation\nUsing LLMs as standalone modules\nCustomizing LLMs within LlamaIndex Abstractions\nAvailable LLM integrationsToggle child pages in navigation\nAI21\nAnthropic\nAnyscale\nBedrock\nConnect to Bedrock with Access Keys\nClarifai LLM\nEverlyAI\nGradient Base Model\nGradient Model Adapter\nHuggingFace LLM - Camel-5b\nHuggingFace LLM - StableLM\nLocal Llama2 + VectorStoreIndex\nLangChain LLM\nLiteLLM\nLlama API\nLlamaCPP\nLocalAI\nMistralAI\nMonster API LLM Integration into LLamaIndex\nNvidia Triton\nOllama - Llama 2 7B\nOpenAI\nAzure OpenAI\nOpenLLM\nOpenRouter\nPaLM\nPerplexity\nPortkey\nPredibase\nReplicate - Llama 2 13B\nReplicate - Vicuna 13B\nLlama2 + VectorStoreIndex\nRunGPT\nSetup\nGetting Started\nBasic auth example for service account\nStreaming Usage\nChat Usage\nAsync Chat\nStreaming Chat\nGemini Models\nInstall Vllm\nOrca-7b Completion Example\nLLama-2-7b Completion Example\nmistral chat 7b Completion Example\nApi Response\nXorbits Inference\n\n\nEmbeddingsToggle child pages in navigation\nOpenAI Embeddings\nLangchain Embeddings\nCohereAI Embeddings\nQdrant FastEmbed Embeddings\nGradient Embeddings\nAzure OpenAI\nCustom Embeddings\nLocal Embeddings with HuggingFace\nElasticsearch Embeddings\nEmbeddings with Clarifai\nLLMRails Embeddings\nText Embedding Inference\nGoogle PaLM Embeddings\nJina Embeddings\nVoyage Embeddings\nMistralAI Embeddings\n\n\nPromptsToggle child pages in navigation\nUsage Pattern\nCompletion prompts\nChat prompts\nAccessing/Customizing Prompts within Higher-Level Modules\nAdvanced Prompt Techniques (Variable Mappings, Functions)\nPrompt Engineering for RAG\n\u201cOptimization by Prompting\u201d for RAG\nEmotionPrompt in RAG\n\n\nUsing local models\nRun Llama2 locally\n\n\nEmbeddingsToggle child pages in navigation\nOpenAI Embeddings\nLangchain Embeddings\nCohereAI Embeddings\nQdrant FastEmbed Embeddings\nGradient Embeddings\nAzure OpenAI\nCustom Embeddings\nLocal Embeddings with HuggingFace\nElasticsearch Embeddings\nEmbeddings with Clarifai\nLLMRails Embeddings\nText Embedding Inference\nGoogle PaLM Embeddings\nJina Embeddings\nVoyage Embeddings\nMistralAI Embeddings", "start_char_idx": 10621, "end_char_idx": 13783, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73fba0c0-18d0-4642-abf0-8e748f118932": {"__data__": {"id_": "73fba0c0-18d0-4642-abf0-8e748f118932", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40e4dd5a-9c08-4ac8-b77a-78ea4f0ede45", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "bc76082d296dff12634b322f49f2b89129d2548ffe5ad8564397cd88687a7e6a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1ea78dd-a5fb-4da6-b2da-59d8c0e83beb", "node_type": "1", "metadata": {}, "hash": "22090a0aec7f1db8a9f53f2126b246a33b3e7a16f9e62e4d4435879ec565be13", "class_name": "RelatedNodeInfo"}}, "hash": "c7c0e7a8e123ac1f10750615c6a53384a614e46683b315fb39c51e90e7989c8d", "text": "PromptsToggle child pages in navigation\nUsage Pattern\nCompletion prompts\nChat prompts\nAccessing/Customizing Prompts within Higher-Level Modules\nAdvanced Prompt Techniques (Variable Mappings, Functions)\nPrompt Engineering for RAG\n\u201cOptimization by Prompting\u201d for RAG\nEmotionPrompt in RAG\n\n\nUsing local models\nRun Llama2 locally\n\n\nEmbeddingsToggle child pages in navigation\nOpenAI Embeddings\nLangchain Embeddings\nCohereAI Embeddings\nQdrant FastEmbed Embeddings\nGradient Embeddings\nAzure OpenAI\nCustom Embeddings\nLocal Embeddings with HuggingFace\nElasticsearch Embeddings\nEmbeddings with Clarifai\nLLMRails Embeddings\nText Embedding Inference\nGoogle PaLM Embeddings\nJina Embeddings\nVoyage Embeddings\nMistralAI Embeddings\n\n\n[Beta] Multi-modal modelsToggle child pages in navigation\nMulti-Modal LLM using OpenAI GPT-4V model for image reasoning\nMulti-Modal LLM using Google\u2019s Gemini model for image understanding and build Retrieval Augmented Generation with LlamaIndex\nMulti-Modal LLM using Replicate LlaVa, Fuyu 8B, MiniGPT4 models for image reasoning\nMulti-Modal GPT4V Pydantic Program\nGPT4-V Experiments with General, Specific questions and Chain Of Thought (COT) Prompting Technique.\nRetrieval-Augmented Image Captioning\nAdvanced Multi-Modal Retrieval using GPT4V and Multi-Modal Index/Retriever\nMulti-Modal on PDF\u2019s with tables.\nMulti-Modal Retrieval using GPT text embedding and CLIP image embedding for Wikipedia Articles\nImage to Image Retrieval using CLIP embedding and image correlation reasoning using GPT4V\nChroma Multi-Modal Demo with LlamaIndex\nEvaluating Multi-Modal RAG\n\n\n\n\nPromptsToggle child pages in navigation\nUsage Pattern\nCompletion prompts\nChat prompts\nAccessing/Customizing Prompts within Higher-Level Modules\nAdvanced Prompt Techniques (Variable Mappings, Functions)\nPrompt Engineering for RAG\n\u201cOptimization by Prompting\u201d for RAG\nEmotionPrompt in RAG\n\n\nLoading DataToggle child pages in navigation\nData Connectors (LlamaHub)Toggle child pages in navigation\nUsage Pattern\nModule GuidesToggle child pages in navigation\nSimple Directory Reader\nPsychic Reader\nDeepLake Reader\nQdrant Reader\nDiscord Reader\nMongoDB Reader\nChroma Reader\nMyScale Reader\nFaiss Reader\nObsidian Reader\nSlack Reader\nWeb Page Reader\nPinecone Reader\nPathway Reader\nMbox Reader\nMilvusReader\nNotion Reader\nGithub Repo Reader\nGoogle Docs Reader\nDatabase Reader\nTwitter Reader\nWeaviate Reader\nMake Reader\nDeplot Reader Demo\n\n\n\n\nDocuments / NodesToggle child pages in navigation\nDefining and Customizing DocumentsToggle child pages in navigation\nMetadata Extraction Usage PatternToggle child pages in navigation\nExtracting Metadata for Better Document Indexing and Understanding\nAutomated Metadata Extraction for Better Retrieval + Synthesis\nEntity Metadata Extraction\nMetadata Extraction and Augmentation w/ Marvin\nPydantic Extractor\n\n\n\n\nDefining and Customizing Nodes\n\n\nNode Parser Usage PatternToggle child pages in navigation\nNode Parser Modules\n\n\nIngestion PipelineToggle child pages in navigation\nTransformations\nAdvanced Ingestion Pipeline\nAsync Ingestion Pipeline + Metadata Extraction\nIngestion Pipeline + Document Management\nRedis Ingestion Pipeline\nBuilding a Live RAG Pipeline over Google Drive Files\n\n\n\n\nIndexingToggle child pages in navigation\nUsing VectorStoreIndexToggle child pages in navigation\nMetadata ExtractionToggle child pages in navigation\nExtracting Metadata for Better Document Indexing and Understanding\nAutomated Metadata Extraction for Better Retrieval + Synthesis\nEntity Metadata Extraction\nMetadata Extraction and Augmentation w/ Marvin\nPydantic Extractor\n\n\nDocument Management\nVector Store Index usage examples\n\n\nHow Each Index Works\nModule GuidesToggle child pages in navigation\nVectorStoreIndexToggle child pages in navigation\nMetadata ExtractionToggle child pages in navigation\nExtracting Metadata for Better Document Indexing and Understanding\nAutomated Metadata Extraction for Better Retrieval + Synthesis\nEntity Metadata Extraction\nMetadata Extraction and Augmentation w/ Marvin\nPydantic Extractor\n\n\nDocument Management\nVector Store Index usage examples", "start_char_idx": 13068, "end_char_idx": 17143, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1ea78dd-a5fb-4da6-b2da-59d8c0e83beb": {"__data__": {"id_": "d1ea78dd-a5fb-4da6-b2da-59d8c0e83beb", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "73fba0c0-18d0-4642-abf0-8e748f118932", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "c7c0e7a8e123ac1f10750615c6a53384a614e46683b315fb39c51e90e7989c8d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40ff5a2b-dcab-425b-9eb2-2fd1c4820a00", "node_type": "1", "metadata": {}, "hash": "1fe4a0124cb0601125e37cfe2b29591ff684ec2a0e0277eccf2aec246b08ebcd", "class_name": "RelatedNodeInfo"}}, "hash": "22090a0aec7f1db8a9f53f2126b246a33b3e7a16f9e62e4d4435879ec565be13", "text": "IndexingToggle child pages in navigation\nUsing VectorStoreIndexToggle child pages in navigation\nMetadata ExtractionToggle child pages in navigation\nExtracting Metadata for Better Document Indexing and Understanding\nAutomated Metadata Extraction for Better Retrieval + Synthesis\nEntity Metadata Extraction\nMetadata Extraction and Augmentation w/ Marvin\nPydantic Extractor\n\n\nDocument Management\nVector Store Index usage examples\n\n\nHow Each Index Works\nModule GuidesToggle child pages in navigation\nVectorStoreIndexToggle child pages in navigation\nMetadata ExtractionToggle child pages in navigation\nExtracting Metadata for Better Document Indexing and Understanding\nAutomated Metadata Extraction for Better Retrieval + Synthesis\nEntity Metadata Extraction\nMetadata Extraction and Augmentation w/ Marvin\nPydantic Extractor\n\n\nDocument Management\nVector Store Index usage examples\n\n\nSummary Index\nTree Index\nKeyword Table Index\nKnowledge Graph Index\nCustom Retriever combining KG Index and VectorStore Index\nKnowledge Graph Query Engine\nKnowledge Graph RAG Query Engine\nREBEL + Knowledge Graph Index\nREBEL + Wikipedia Filtering\nSQL Index\nSQL Query Engine with LlamaIndex + DuckDB\nDocument Summary Index\nThe ObjectIndex Class\n\n\nComposabilityToggle child pages in navigation\nComposable Graph Basic\nComposable Graph with Weaviate\nComposable Graph\n\n\n\n\nStoringToggle child pages in navigation\nCustomizing Storage\nPersisting & Loading Data\nVector StoresToggle child pages in navigation\nAstra DB\nSimple Vector Store - Async Index Creation\nAzure CosmosDB MongoDB Vector Store\nCassandra Vector Store\nChroma\nAzure Cognitive Search\nDashVector Vector Store\nDeepLake Vector Store\nDocArray Hnsw Vector Store\nDocArray InMemory Vector Store\nEpsilla Vector Store\nJaguar Vector Store\nLanceDB Vector Store\nMetal Vector Store\nMilvus Vector Store\nMyScale Vector Store\nElasticsearch Vector Store\nFaiss Vector Store\nMongoDB Atlas\nNeo4j vector store\nOpensearch Vector Store\nPinecone Vector Store\nPinecone Vector Store - Hybrid Search\npgvecto.rs\nPostgres Vector Store\nRedis Vector Store\nQdrant Vector Store\nQdrant Hybrid Search\nRockset Vector Store\nSimple Vector Store\nSupabase Vector Store\nTair Vector Store\nTencent Cloud VectorDB\nTimescale Vector Store (PostgreSQL)\nWeaviate Vector Store\nWeaviate Vector Store - Hybrid Search\nZep Vector Store\n\n\nDocument Stores\nIndex Stores\nKey-Value Stores\nUsing Graph StoresToggle child pages in navigation\nNeo4j Graph Store\nNebula Graph Store\nKnowledge Graph Query Engine\nKuzu Graph Store\nFalkorDB Graph Store\n\n\nChat Stores\n\n\nQueryingToggle child pages in navigation\nQuery EngineToggle child pages in navigation\nUsage PatternToggle child pages in navigation\nResponse Modes\nStreaming\n\n\nModule GuidesToggle child pages in navigation\nCustom Query Engine\nRetriever Query Engine\nText-to-SQL Guide (Query Engine + Retriever)\nJSON Query Engine\nPandas Query Engine\nKnowledge Graph Query Engine\nKnowledge Graph RAG Query Engine\nStructured Hierarchical Retrieval\nRouter Query Engine\nRetriever Router Query Engine\nJoint QA Summary Query Engine\nSub Question Query Engine\nMulti-Step Query Engine\nSQL Router Query Engine\nSQL Auto Vector Query Engine\nSQL Join Query Engine\n[Beta] Text-to-SQL with PGVector\nSQL Query Engine with LlamaIndex + DuckDB\nRetry Query Engine\nCitationQueryEngine\nRecursive Retriever + Query Engine Demo\nJoint Tabular/Semantic QA over Tesla 10K\nRecursive Retriever + Document Agents\nEnsemble Query Engine Guide\nSub Question Query Engine\nRecursive Retriever + Document Agents\nMulti-Document Agents\nMulti-Document Agents (V1)\nFLARE Query Engine\n\n\nSupporting ModulesToggle child pages in navigation\nQuery TransformationsToggle child pages in navigation\nHyDE Query Transform\nMulti-Step Query Engine\n\n\n\n\n\n\nChat EngineToggle child pages in navigation\nUsage Pattern\nModule GuidesToggle child pages in navigation\nReAct Chat Engine\nOpenAI Chat Engine\nCondense Question Chat Engine\nContext Chat Engine\nContext Plus Condense Chat Engine\nSimple Chat Engine", "start_char_idx": 16268, "end_char_idx": 20228, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "40ff5a2b-dcab-425b-9eb2-2fd1c4820a00": {"__data__": {"id_": "40ff5a2b-dcab-425b-9eb2-2fd1c4820a00", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1ea78dd-a5fb-4da6-b2da-59d8c0e83beb", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "22090a0aec7f1db8a9f53f2126b246a33b3e7a16f9e62e4d4435879ec565be13", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10ce32d7-c04e-4cf1-a172-c7126cd6c2e1", "node_type": "1", "metadata": {}, "hash": "d3a67bbe4ccd39bfee5961df8b37e8a5b76c955f12b60fd9555b534aafafac8b", "class_name": "RelatedNodeInfo"}}, "hash": "1fe4a0124cb0601125e37cfe2b29591ff684ec2a0e0277eccf2aec246b08ebcd", "text": "Supporting ModulesToggle child pages in navigation\nQuery TransformationsToggle child pages in navigation\nHyDE Query Transform\nMulti-Step Query Engine\n\n\n\n\n\n\nChat EngineToggle child pages in navigation\nUsage Pattern\nModule GuidesToggle child pages in navigation\nReAct Chat Engine\nOpenAI Chat Engine\nCondense Question Chat Engine\nContext Chat Engine\nContext Plus Condense Chat Engine\nSimple Chat Engine\n\n\n\n\nData AgentsToggle child pages in navigation\nUsage Pattern\nModule GuidesToggle child pages in navigation\nBuild your own OpenAI Agent\nOpenAI Agent with Query Engine Tools\nRetrieval-Augmented OpenAI Agent\nOpenAI Agent + Query Engine Experimental Cookbook\nOpenAI Agent Query Planning\nContext-Augmented OpenAI Agent\nRecursive Retriever + Document Agents\nMulti-Document Agents\nGPT Builder Demo\nSingle-Turn Multi-Function Calling OpenAI Agents\nOpenAI Assistant Agent\nBenchmarking OpenAI Retrieval API (through Assistant Agent)\nOpenAI Assistant Advanced Retrieval Cookbook\nReAct Agent with Query Engine Tools\nLLMCompiler Agent Cookbook\nBuilding a Custom Agent\nStep-wise, Controllable Agents\nControllable Agents for RAG\nControllable Agents for RAG\n\n\nToolsToggle child pages in navigation\nUsage Pattern\nLlamaHub Tools Guide\n\n\nLower-Level Agent API\n\n\nRetrieverToggle child pages in navigation\nRetriever Modes\nRetriever ModulesToggle child pages in navigation\nDefine Custom Retriever\nBM25 Hybrid Retriever\nSimple Fusion Retriever\nReciprocal Rerank Fusion Retriever\nAuto Merging Retriever\nMetadata Replacement + Node Sentence Window\nAuto Retriever (with Pinecone + Arize Phoenix)\nAuto-Retrieval (with Chroma)\nAuto-Retrieval (with BagelDB)\nStructured Hierarchical Retrieval\nAuto-Retrieval from a Vectara Index\nCustom Retriever (KG Index and Vector Store Index)\nKnowledge Graph RAG Retriever\nRecursive Retriever + Query Engine Demo\nRecursive Retriever + Node References\nRecursive Retriever + Node References + Braintrust\nRouter Retriever\nEnsemble Retrieval Guide\nGoogle Generative Language Semantic Retriever\nStructured Hierarchical Retrieval\nGoogle Generative Language Semantic Retriever\nVectara Managed Index\nManaged Index with Zilliz Cloud Pipelines\nYou.com Retriever\nText-to-SQL Guide (Query Engine + Retriever)\nDeepMemory (Activeloop)\nPathway Retriever\n\n\n\n\nResponse SynthesizerToggle child pages in navigation\nResponse Synthesis ModulesToggle child pages in navigation\nRefine\nRefine with Structured Answer Filtering\nTree Summarize\nPydantic Tree Summarize\n\n\n\n\nRoutersToggle child pages in navigation\nRouter Query Engine\nRetriever Router Query Engine\nSQL Router Query Engine\nRouter Retriever\n\n\nNode PostprocessorToggle child pages in navigation\nNode Postprocessor ModulesToggle child pages in navigation\nSentence Embedding Optimizer\nCohere Rerank\nLLM Reranker Demonstration (2021 Lyft 10-k)\nLLM Reranker Demonstration (Great Gatsby)\nRecency Filtering\nTime-Weighted Rerank\nPII Masking\nForward/Backward Augmentation\nMetadata Replacement + Node Sentence Window\nLongContextReorder\n\n\n\n\nStructured OutputsToggle child pages in navigation\nPydantic ProgramToggle child pages in navigation\nLLM Pydantic Program\nOpenAI Pydantic Program\nGuidance Pydantic Program\nGuidance for Sub-Question Query Engine\nDataFrame Structured Data Extraction\nEvaporate Demo\n\n\nQuery Engines + Pydantic OutputsToggle child pages in navigation\nQuery Engine with Pydantic Outputs\nPydantic Tree Summarize\nDownload Data\n\n\nOutput Parsing ModulesToggle child pages in navigation\nGuardrails Output Parsing\nLangchain Output Parsing\nGuidance Pydantic Program\nGuidance for Sub-Question Query Engine\nOpenAI Pydantic Program\n\n\n\n\n\n\nObservabilityToggle child pages in navigation\nWandb Callback Handler\nArize Phoenix Tracing Tutorial\nOpenInference Callback Handler + Arize Phoenix\nEvaluating Search and Retrieval with Arize Phoenix\nEvaluating and Tracking with TruLens\nQuickstart Guide with LlamaIndex + TruLens\nColab\nHoneyHive LlamaIndex Tracer\nPromptLayer Handler\nCallbacksToggle child pages in navigation\nToken Counting Handler\nLlama Debug Handler\nWandb Callback Handler\nAim Callback\nOpenInference Callback Handler + Arize Phoenix\nToken Counting - Migration Guide", "start_char_idx": 19829, "end_char_idx": 23939, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10ce32d7-c04e-4cf1-a172-c7126cd6c2e1": {"__data__": {"id_": "10ce32d7-c04e-4cf1-a172-c7126cd6c2e1", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40ff5a2b-dcab-425b-9eb2-2fd1c4820a00", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "1fe4a0124cb0601125e37cfe2b29591ff684ec2a0e0277eccf2aec246b08ebcd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dff06e6d-c79a-43df-bf1c-b6357a36565b", "node_type": "1", "metadata": {}, "hash": "10638a12575d805263672b844ae6844cd0e0e55568b9490e957d3b9e5fd02857", "class_name": "RelatedNodeInfo"}}, "hash": "d3a67bbe4ccd39bfee5961df8b37e8a5b76c955f12b60fd9555b534aafafac8b", "text": "Output Parsing ModulesToggle child pages in navigation\nGuardrails Output Parsing\nLangchain Output Parsing\nGuidance Pydantic Program\nGuidance for Sub-Question Query Engine\nOpenAI Pydantic Program\n\n\n\n\n\n\nObservabilityToggle child pages in navigation\nWandb Callback Handler\nArize Phoenix Tracing Tutorial\nOpenInference Callback Handler + Arize Phoenix\nEvaluating Search and Retrieval with Arize Phoenix\nEvaluating and Tracking with TruLens\nQuickstart Guide with LlamaIndex + TruLens\nColab\nHoneyHive LlamaIndex Tracer\nPromptLayer Handler\nCallbacksToggle child pages in navigation\nToken Counting Handler\nLlama Debug Handler\nWandb Callback Handler\nAim Callback\nOpenInference Callback Handler + Arize Phoenix\nToken Counting - Migration Guide\n\n\n\n\nEvaluatingToggle child pages in navigation\nUsage Pattern (Response Evaluation)\nUsage Pattern (Retrieval)\nModulesToggle child pages in navigation\nFaithfulness Evaluator\nRelevancy Evaluator\nAnswer Relevancy and Context Relevancy Evaluations\nGuideline Evaluator\nCorrectness Evaluator\nEmbedding Similarity Evaluator\nLlamaIndex + DeepEval Integration\nQuestionGeneration\nBatchEvalRunner - Running Multiple Evaluations\nEvaluating Multi-Modal RAG\nRetrieval Evaluation\n\n\nEvaluating With LabelledRagDataset\u2019sToggle child pages in navigation\nBenchmarking RAG Pipelines With A LabelledRagDatatset\nDownloading a LlamaDataset from LlamaHub\n\n\nContributing A LabelledRagDatasetToggle child pages in navigation\nLlamaDataset Submission Template Notebook\n\n\n\n\nSupporting ModulesToggle child pages in navigation\nServiceContext\n\n\n\nAPI Reference\n\nAPI ReferenceToggle child pages in navigation\nAgents\nCallbacks\nComposability\nEvaluation\nExample Notebooks\nFinetuning\nIndicesToggle child pages in navigation\nSummary Index\nTable Index\nTree Index\nVector Store Index\nStructured Store Index\nKnowledge Graph Index\nEmpty Index\n\n\nLLM Predictors\nLLMsToggle child pages in navigation\nAnthropic\nAzure OpenAI\nHuggingFaceLLM\nLangChainLLM\nGradient Base Model\nGradient Model Adapter\nLiteLLM\nLlamaCPP\nOpenAI\nOpenAILike\nOpenLLM\nPaLM\nPredibase\nReplicate\nXOrbits Xinference\n\n\nMemory\nMulti-Modal LLMs, Vector Stores, Embeddings, Retriever, and Query EngineToggle child pages in navigation\nOpenAI\nReplicate\n\n\nNode Postprocessor\nNodeToggle child pages in navigation\nBaseComponent\nBaseNode\nDocument\nImageDocument\nImageNode\nIndexNode\nMetadataMode\nNode\nNodeRelationship\nNodeWithScore\nObjectType\nQueryBundle\nRelatedNodeInfo\nTextNode\nTransformComponent\n\n\nPlayground\nPrompt Templates\nQuerying an IndexToggle child pages in navigation\nRetrieversToggle child pages in navigation\nEmpty Index Retriever\nKnowledge Graph Retriever\nList Retriever\nKeyword Table Retrievers\nTree Retrievers\nVector Store Retrievers\nTransform Retriever\n\n\nResponse Synthesizer\nQuery EnginesToggle child pages in navigation\nGraph Query Engine\nMultistep Query Engine\nRetriever Query Engine\nTransform Query Engine\nRouter Query Engine\nRetriever Router Query Engine\nSub Question Query Engine\nSQL Join Query Engine\nFlare Query Engine\nCitation Query Engine\nKnowledge Graph Query Engine\nSQL Query Engine\nPandas Query Engine\n\n\nChat EnginesToggle child pages in navigation\nSimple Chat Engine\nCondense Question Chat Engine\nCondense Plus Context Chat Engine\n\n\nQuery Bundle\nQuery Transform\n\n\nData ConnectorsToggle child pages in navigation\ndownload_loader\nWikipediaReader\nYoutubeTranscriptReader\nSimpleDirectoryReader\nJSONReader\nSimpleMongoReader\nNotionPageReader\nGoogleDocsReader\nMetalReader\nDiscordReader\nSlackReader\nWeaviateReader\nPathwayReader\nPineconeReader\nPsychicReader\nQdrantReader\nMilvusReader\nChromaReader\nDeepLakeReader\nFaissReader\nMyScaleReader\nStringIterableReader\nSimpleWebPageReader\nBeautifulSoupWebReader\nTrafilaturaWebReader\nRssReader\nMakeWrapper\nTwitterTweetReader\nObsidianReader\nGithubRepositoryReader\nMboxReader\nElasticsearchReader\nSteamshipFileReader\nChatGPTRetrievalPluginReader\nBagelReader\nHTMLTagReader\nReaderConfig\nPDFReader\nDashVectorReader", "start_char_idx": 23206, "end_char_idx": 27114, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dff06e6d-c79a-43df-bf1c-b6357a36565b": {"__data__": {"id_": "dff06e6d-c79a-43df-bf1c-b6357a36565b", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10ce32d7-c04e-4cf1-a172-c7126cd6c2e1", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "d3a67bbe4ccd39bfee5961df8b37e8a5b76c955f12b60fd9555b534aafafac8b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e3976ba-733f-4c14-be6b-2b7a745c2a19", "node_type": "1", "metadata": {}, "hash": "e7feff0f386ed16f335d71dcd618b1f8817e91570cec3ac1c40e53330606e65b", "class_name": "RelatedNodeInfo"}}, "hash": "10638a12575d805263672b844ae6844cd0e0e55568b9490e957d3b9e5fd02857", "text": "Query Bundle\nQuery Transform\n\n\nData ConnectorsToggle child pages in navigation\ndownload_loader\nWikipediaReader\nYoutubeTranscriptReader\nSimpleDirectoryReader\nJSONReader\nSimpleMongoReader\nNotionPageReader\nGoogleDocsReader\nMetalReader\nDiscordReader\nSlackReader\nWeaviateReader\nPathwayReader\nPineconeReader\nPsychicReader\nQdrantReader\nMilvusReader\nChromaReader\nDeepLakeReader\nFaissReader\nMyScaleReader\nStringIterableReader\nSimpleWebPageReader\nBeautifulSoupWebReader\nTrafilaturaWebReader\nRssReader\nMakeWrapper\nTwitterTweetReader\nObsidianReader\nGithubRepositoryReader\nMboxReader\nElasticsearchReader\nSteamshipFileReader\nChatGPTRetrievalPluginReader\nBagelReader\nHTMLTagReader\nReaderConfig\nPDFReader\nDashVectorReader\n\n\nResponse\nService ContextToggle child pages in navigation\nEmbeddings\nOpenAIEmbedding\nHuggingFaceEmbedding\nOptimumEmbedding\nInstructorEmbedding\nLangchainEmbedding\nGoogleUnivSentEncoderEmbedding\nNode ParserToggle child pages in navigation\nget_leaf_nodes\nget_root_nodes\nTokenTextSplitter\nSentenceSplitter\nCodeSplitter\nSimpleFileNodeParser\nHTMLNodeParser\nMarkdownNodeParser\nJSONNodeParser\nSentenceWindowNodeParser\nNodeParser\nHierarchicalNodeParser\nTextSplitter\nMarkdownElementNodeParser\nMetadataAwareTextSplitter\nLangchainNodeParser\nUnstructuredElementNodeParser\nSimpleNodeParser\n\n\nPromptHelper\nLLMsToggle child pages in navigation\nAnthropic\nAzure OpenAI\nHuggingFaceLLM\nLangChainLLM\nGradient Base Model\nGradient Model Adapter\nLiteLLM\nLlamaCPP\nOpenAI\nOpenAILike\nOpenLLM\nPaLM\nPredibase\nReplicate\nXOrbits Xinference\n\n\n\n\nEmbeddings\nOpenAIEmbedding\nHuggingFaceEmbedding\nOptimumEmbedding\nInstructorEmbedding\nLangchainEmbedding\nGoogleUnivSentEncoderEmbedding\nStorage ContextToggle child pages in navigation\nDocument Store\nIndex Store\nVector StoreToggle child pages in navigation\nElasticsearchStore\nSimpleVectorStore\nRedisVectorStore\nRocksetVectorStore\nFaissVectorStore\nPineconeVectorStore\nWeaviateVectorStore\nQdrantVectorStore\nCassandraVectorStore\nChromaVectorStore\nMetalVectorStore\nOpensearchVectorStore\nOpensearchVectorClient\nChatGPTRetrievalPluginClient\nMilvusVectorStore\nDeepLakeVectorStore\nMyScaleVectorStore\nLanceDBVectorStore\nTairVectorStore\nDocArrayInMemoryVectorStore\nDocArrayHnswVectorStore\nSupabaseVectorStore\nPGVectorStore\nPGVectoRsStore\nTimescaleVectorStore\nZepVectorStore\nAwaDBVectorStore\nBagelVectorStore\nNeo4jVectorStore\nCognitiveSearchVectorStore\nEpsillaVectorStore\nSingleStoreVectorStore\nVectorStoreQuery\nVectorStoreQueryResult\nMetadataFilters\nMetadataFilter\nExactMatchFilter\nFilterCondition\nFilterOperator\nDashVectorStore\nTencentVectorDB\nAstraDBVectorStore\nAzureCosmosDBMongoDBVectorSearch\nLanternVectorStore\nMongoDBAtlasVectorSearch\n\n\nKV Storage\nLoading Indices\n\n\nStructured Index Configuration\n\n\n\nCommunity\n\nIntegrationsToggle child pages in navigation\nLlama Packs \ud83e\udd99\ud83d\udce6Toggle child pages in navigation\nLlama Packs Example\nLlama Pack - Resume Screener \ud83d\udcc4\nOllama Llama Pack Example\n\n\nObservabilityToggle child pages in navigation\nWandb Callback Handler\nArize Phoenix Tracing Tutorial\nOpenInference Callback Handler + Arize Phoenix\nEvaluating Search and Retrieval with Arize Phoenix\nEvaluating and Tracking with TruLens\nQuickstart Guide with LlamaIndex + TruLens\nColab\nHoneyHive LlamaIndex Tracer\nPromptLayer Handler\nCallbacksToggle child pages in navigation\nToken Counting Handler\nLlama Debug Handler\nWandb Callback Handler\nAim Callback\nOpenInference Callback Handler + Arize Phoenix\nToken Counting - Migration Guide", "start_char_idx": 26409, "end_char_idx": 29837, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0e3976ba-733f-4c14-be6b-2b7a745c2a19": {"__data__": {"id_": "0e3976ba-733f-4c14-be6b-2b7a745c2a19", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dff06e6d-c79a-43df-bf1c-b6357a36565b", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "10638a12575d805263672b844ae6844cd0e0e55568b9490e957d3b9e5fd02857", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "15efbffe-6487-405d-b19c-36476b2f47f9", "node_type": "1", "metadata": {}, "hash": "2e74ae181cd50d52fa7732ac5b66e44295025e8b9589b18db1efdb11cf8e03a6", "class_name": "RelatedNodeInfo"}}, "hash": "e7feff0f386ed16f335d71dcd618b1f8817e91570cec3ac1c40e53330606e65b", "text": "KV Storage\nLoading Indices\n\n\nStructured Index Configuration\n\n\n\nCommunity\n\nIntegrationsToggle child pages in navigation\nLlama Packs \ud83e\udd99\ud83d\udce6Toggle child pages in navigation\nLlama Packs Example\nLlama Pack - Resume Screener \ud83d\udcc4\nOllama Llama Pack Example\n\n\nObservabilityToggle child pages in navigation\nWandb Callback Handler\nArize Phoenix Tracing Tutorial\nOpenInference Callback Handler + Arize Phoenix\nEvaluating Search and Retrieval with Arize Phoenix\nEvaluating and Tracking with TruLens\nQuickstart Guide with LlamaIndex + TruLens\nColab\nHoneyHive LlamaIndex Tracer\nPromptLayer Handler\nCallbacksToggle child pages in navigation\nToken Counting Handler\nLlama Debug Handler\nWandb Callback Handler\nAim Callback\nOpenInference Callback Handler + Arize Phoenix\nToken Counting - Migration Guide\n\n\n\n\nTracing with Graphsignal\nEvaluating and Tracking with TruLens\nUnit Testing LLMs With DeepEval\nGuidance\nLM Format Enforcer\nGuardrails\nOpenAI Function Calling\nUsing Vector StoresToggle child pages in navigation\nAstra DB\nSimple Vector Store - Async Index Creation\nAzure CosmosDB MongoDB Vector Store\nCassandra Vector Store\nChroma\nAzure Cognitive Search\nDashVector Vector Store\nDeepLake Vector Store\nDocArray Hnsw Vector Store\nDocArray InMemory Vector Store\nEpsilla Vector Store\nLanceDB Vector Store\nMetal Vector Store\nMilvus Vector Store\nMyScale Vector Store\nElasticsearch Vector Store\nFaiss Vector Store\nMongoDB Atlas\nNeo4j vector store\nOpensearch Vector Store\nPinecone Vector Store\nPinecone Vector Store - Hybrid Search\npgvecto.rs\nPostgres Vector Store\nRedis Vector Store\nQdrant Vector Store\nQdrant Hybrid Search\nRockset Vector Store\nSimple Vector Store\nSupabase Vector Store\nTair Vector Store\nTencent Cloud VectorDB\nTimescale Vector Store (PostgreSQL)\nWeaviate Vector Store\nWeaviate Vector Store - Hybrid Search\nZep Vector Store\n\n\nUsing Graph StoresToggle child pages in navigation\nNeo4j Graph Store\nNebula Graph Store\nKnowledge Graph Query Engine\nKuzu Graph Store\nFalkorDB Graph Store\n\n\nUsing Managed IndicesToggle child pages in navigation\nGoogle Generative Language Semantic Retriever\nVectara Managed Index\nAuto-Retrieval from a Vectara Index\nManaged Index with Zilliz Cloud Pipelines\n\n\nUsing with Langchain \ud83e\udd9c\ud83d\udd17\nStreamlit\nChainlit\nLlamaIndex + Ray\nChatGPT Plugin Integrations\nPoe\nAirbyte\nFleet Context Embeddings - Building a Hybrid Search Engine for the Llamaindex Library\n\n\nFrequently Asked Questions (FAQ)Toggle child pages in navigation\nLarge Language Models\nEmbeddings\nVector Database\nQuery Engines\nChat Engines\nDocuments and Nodes\n\n\nFull-Stack ProjectsToggle child pages in navigation\ncreate-llama Blog\ncreate-llama Repo\ncreate-llama Additional Templates\nSEC Insights App\nSEC Insights Repo\nChat LlamaIndex App\nChat LlamaIndex Repo\nRAGs Repo\n\n\n\nContributing\n\nContributing to LlamaIndex\nDocumentation Guide\n\nChanges\n\nChangeLog\nDeprecated Terms\n\n\n\n\n\n\n\n\n\n\n\n\n\nBack to top\n\n\n\n\nToggle Light / Dark / Auto color theme\n\n\n\n\n\n\nToggle table of contents sidebar", "start_char_idx": 29060, "end_char_idx": 31998, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15efbffe-6487-405d-b19c-36476b2f47f9": {"__data__": {"id_": "15efbffe-6487-405d-b19c-36476b2f47f9", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e3976ba-733f-4c14-be6b-2b7a745c2a19", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "e7feff0f386ed16f335d71dcd618b1f8817e91570cec3ac1c40e53330606e65b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "225e6d66-a44f-44c1-96cf-1bc3b09f8fec", "node_type": "1", "metadata": {}, "hash": "0887bdd7930e87eed38ac747788d85ecd1396293fc13e87d3118cb2bbaf9cee9", "class_name": "RelatedNodeInfo"}}, "hash": "2e74ae181cd50d52fa7732ac5b66e44295025e8b9589b18db1efdb11cf8e03a6", "text": "Using with Langchain \ud83e\udd9c\ud83d\udd17\nStreamlit\nChainlit\nLlamaIndex + Ray\nChatGPT Plugin Integrations\nPoe\nAirbyte\nFleet Context Embeddings - Building a Hybrid Search Engine for the Llamaindex Library\n\n\nFrequently Asked Questions (FAQ)Toggle child pages in navigation\nLarge Language Models\nEmbeddings\nVector Database\nQuery Engines\nChat Engines\nDocuments and Nodes\n\n\nFull-Stack ProjectsToggle child pages in navigation\ncreate-llama Blog\ncreate-llama Repo\ncreate-llama Additional Templates\nSEC Insights App\nSEC Insights Repo\nChat LlamaIndex App\nChat LlamaIndex Repo\nRAGs Repo\n\n\n\nContributing\n\nContributing to LlamaIndex\nDocumentation Guide\n\nChanges\n\nChangeLog\nDeprecated Terms\n\n\n\n\n\n\n\n\n\n\n\n\n\nBack to top\n\n\n\n\nToggle Light / Dark / Auto color theme\n\n\n\n\n\n\nToggle table of contents sidebar\n\n\n\n\n\nWelcome to LlamaIndex \ud83e\udd99 !\uf0c1\nLlamaIndex is a data framework for LLM-based applications to ingest, structure, and access private or domain-specific data. It\u2019s available in Python (these docs) and Typescript.\n\n\ud83d\ude80 Why LlamaIndex?\uf0c1\nLLMs offer a natural language interface between humans and data. Widely available models come pre-trained on huge amounts of publicly available data like Wikipedia, mailing lists, textbooks, source code and more.\nHowever, while LLMs are trained on a great deal of data, they are not trained on your data, which may be private or specific to the problem you\u2019re trying to solve. It\u2019s behind APIs, in SQL databases, or trapped in PDFs and slide decks.\nYou may choose to fine-tune a LLM with your data, but:\n\nTraining a LLM is expensive.\nDue to the cost to train, it\u2019s hard to update a LLM with latest information.\nObservability is lacking. When you ask a LLM a question, it\u2019s not obvious how the LLM arrived at its answer.\n\nLlamaIndex takes a different approach called Retrieval-Augmented Generation (RAG). Instead of asking LLM to generate an answer immediately, LlamaIndex:\n\nretrieves information from your data sources first,\nadds it to your question as context, and\nasks the LLM to answer based on the enriched prompt.\n\nRAG overcomes all three weaknesses of the fine-tuning approach:\n\nThere\u2019s no training involved, so it\u2019s cheap.\nData is fetched only when you ask for them, so it\u2019s always up to date.\nLlamaIndex can show you the retrieved documents, so it\u2019s more trustworthy.\n\nLlamaIndex imposes no restriction on how you use LLMs. You can still use LLMs as auto-complete, chatbots, semi-autonomous agents, and more (see Use Cases on the left). It only makes LLMs more relevant to you.\n\n\n\ud83e\udd99 How can LlamaIndex help?\uf0c1\nLlamaIndex provides the following tools:\n\nData connectors ingest your existing data from their native source and format. These could be APIs, PDFs, SQL, and (much) more.\nData indexes structure your data in intermediate representations that are easy and performant for LLMs to consume.\nEngines provide natural language access to your data. For example:\n\nQuery engines are powerful retrieval interfaces for knowledge-augmented output.\nChat engines are conversational interfaces for multi-message, \u201cback and forth\u201d interactions with your data.\n\n\nData agents are LLM-powered knowledge workers augmented by tools, from simple helper functions to API integrations and more.\nApplication integrations tie LlamaIndex back into the rest of your ecosystem. This could be LangChain, Flask, Docker, ChatGPT, or\u2026 anything else!\n\n\n\n\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Who is LlamaIndex for?\uf0c1\nLlamaIndex provides tools for beginners, advanced users, and everyone in between.\nOur high-level API allows beginner users to use LlamaIndex to ingest and query their data in 5 lines of code.\nFor more complex applications, our lower-level APIs allow advanced users to customize and extend any module\u2014data connectors, indices, retrievers, query engines, reranking modules\u2014to fit their needs.\n\n\nGetting Started\uf0c1\nTo install the library:\npip install llama-index\nWe recommend starting at how to read these docs, which will point you to the right place based on your experience level.", "start_char_idx": 31232, "end_char_idx": 35173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "225e6d66-a44f-44c1-96cf-1bc3b09f8fec": {"__data__": {"id_": "225e6d66-a44f-44c1-96cf-1bc3b09f8fec", "embedding": null, "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ed934147-64f1-40aa-84e0-70684fcda7d1", "node_type": "4", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "6e4385cccb2d7d83dc26e68a05ecd36d75626b1102b249be13d9ee4e4c7a8654", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "15efbffe-6487-405d-b19c-36476b2f47f9", "node_type": "1", "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}, "hash": "2e74ae181cd50d52fa7732ac5b66e44295025e8b9589b18db1efdb11cf8e03a6", "class_name": "RelatedNodeInfo"}}, "hash": "0887bdd7930e87eed38ac747788d85ecd1396293fc13e87d3118cb2bbaf9cee9", "text": "\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Who is LlamaIndex for?\uf0c1\nLlamaIndex provides tools for beginners, advanced users, and everyone in between.\nOur high-level API allows beginner users to use LlamaIndex to ingest and query their data in 5 lines of code.\nFor more complex applications, our lower-level APIs allow advanced users to customize and extend any module\u2014data connectors, indices, retrievers, query engines, reranking modules\u2014to fit their needs.\n\n\nGetting Started\uf0c1\nTo install the library:\npip install llama-index\nWe recommend starting at how to read these docs, which will point you to the right place based on your experience level.\n\n\n\ud83d\uddfa\ufe0f Ecosystem\uf0c1\nTo download or contribute, find LlamaIndex on:\n\nGithub: https://github.com/jerryjliu/llama_index\nPyPi:\n\nLlamaIndex: https://pypi.org/project/llama-index/.\nGPT Index (duplicate): https://pypi.org/project/gpt-index/.\n\n\n\nNPM (Typescript/Javascript):\nGithub: https://github.com/run-llama/LlamaIndexTS\nDocs: https://ts.llamaindex.ai/\nLlamaIndex.TS: https://www.npmjs.com/package/llamaindex\n\n\n\n\n\n\nCommunity\uf0c1\nNeed help? Have a feature suggestion? Join the LlamaIndex community:\n\nTwitter: https://twitter.com/llama_index\nDiscord https://discord.gg/dGcwcsnxhU\n\n\n\nAssociated projects\uf0c1\n\n\ud83c\udfe1 LlamaHub: https://llamahub.ai | A large (and growing!) collection of custom data connectors\n\ud83e\uddea LlamaLab: https://github.com/run-llama/llama-lab | Ambitious projects built on top of LlamaIndex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext\n\nInstallation and Setup\n\n\n\n\n\n\n\n                Copyright \u00a9 2023, Jerry Liu\n            \n            Made with Sphinx and @pradyunsg's\n            \n            Furo\n\n\n\n\n\n\n\n\n\n\n            On this page\n          \n\n\n\n\nWelcome to LlamaIndex \ud83e\udd99 !\n\ud83d\ude80 Why LlamaIndex?\n\ud83e\udd99 How can LlamaIndex help?\n\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 Who is LlamaIndex for?\nGetting Started\n\ud83d\uddfa\ufe0f Ecosystem\nCommunity\nAssociated projects", "start_char_idx": 34563, "end_char_idx": 36367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"7dfe73c9-f272-4e32-b956-95a7066bbed1": {"node_ids": ["d9989912-d92a-485a-8958-401ec332effc"], "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\essay_q_and_a.json", "file_name": "essay_q_and_a.json", "file_type": "application/json", "file_size": 1532, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}}, "15acc11a-395d-4f99-99d5-0b60ae455c08": {"node_ids": ["a1a47449-bcd1-497b-8001-3a5ff89bab0f"], "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\good essay.txt", "file_name": "good essay.txt", "file_type": "text/plain", "file_size": 4690, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}}, "00e619f6-10bc-4cac-8f1b-c0844c65ce91": {"node_ids": ["70ccfc77-a70e-436f-a9de-d6d8464a6f20"], "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\how to write an essay.txt", "file_name": "how to write an essay.txt", "file_type": "text/plain", "file_size": 4671, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}}, "9d7afef3-f941-4d43-8980-dc60f489a3c2": {"node_ids": ["d0cbe4aa-0ce9-4bf1-9efd-7e0094522000"], "metadata": {"file_path": "A:\\Work\\Training_Data\\Mydocs\\types of essays.txt", "file_name": "types of essays.txt", "file_type": "text/plain", "file_size": 5233, "creation_date": "2023-12-06", "last_modified_date": "2023-12-05", "last_accessed_date": "2024-01-08"}}, "ed934147-64f1-40aa-84e0-70684fcda7d1": {"node_ids": ["8c8d7310-ecdc-47fe-a594-05d748ec5a28", "6218af31-4283-49a9-8d6b-36419f2602c9", "74b1c2cd-77ad-4df7-88c7-e1846f1ce2b2", "40e4dd5a-9c08-4ac8-b77a-78ea4f0ede45", "73fba0c0-18d0-4642-abf0-8e748f118932", "d1ea78dd-a5fb-4da6-b2da-59d8c0e83beb", "40ff5a2b-dcab-425b-9eb2-2fd1c4820a00", "10ce32d7-c04e-4cf1-a172-c7126cd6c2e1", "dff06e6d-c79a-43df-bf1c-b6357a36565b", "0e3976ba-733f-4c14-be6b-2b7a745c2a19", "15efbffe-6487-405d-b19c-36476b2f47f9", "225e6d66-a44f-44c1-96cf-1bc3b09f8fec"], "metadata": {"source": "https://gpt-index.readthedocs.io/en/latest/", "loc": "https://gpt-index.readthedocs.io/en/latest/", "lastmod": "2024-01-08T03:29:05.470167+00:00", "changefreq": "daily", "priority": "0.9"}}}}